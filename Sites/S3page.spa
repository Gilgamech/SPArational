/* s3 page
"s3": {
"pageTitle": "S3 Page", "pageDesc": "This page is for S3ing.", "elements": [{ "elementParent": "parentElement", "elementClass": "sidebar $_.classes.ImgRnd $_.classes.HalfDesktopFullMobile", "elementStyle": "border:1px solid 333;overflow:scroll;resize:horizontal; height: 50vh", "id": "sidebar" }, { "elementParent": "parentElement", "elementClass": "$_.classes.ImgRnd $_.classes.HalfDesktopFullMobile", "elementStyle": "border:1px solid 333;overflow:scroll;resize:horizontal; height: 50vh", "id": "contentInner" }, { "elementParent": "contentInner", "id": "htmlDiv" }, { "elementParent": "sidebar", "id": "currentPageDiv" }, { "elementParent": "currentPageDiv", "elementClass": "$_.classes.Row $_.classes.ContentTitle", "innerText": "Current Site", "id": "currentSiteDiv" }, { "elementParent": "currentPageDiv", "elementType": "select", "onChange": "", "id": "currentSiteSel" }, { "elementParent": "currentPageDiv", "elementClass": "$_.classes.Dropdown", "id": "advDD" }, { "elementParent": "advDD", "innerText": "Advanced", "elementClass": "btn btn-primary", "elementType": "p" }, { "elementParent": "advDD", "elementClass": "$_.classes.DdownContent", "id": "advancedPageDiv", "innerText": "Version:" }, { "elementParent": "advancedPageDiv", "elementType": "input", "id": "pageVerNum" }, { "elementParent": "advancedPageDiv", "innerText": "Refresh", "elementClass": "btn btn-primary", "elementType": "button", "onClick": "$site=readElement('currentSiteSel');xhrRequest('GET','https://s3.amazonaws.com/gilpublic/'+$site+'/'+$site+'.spa',function(cb){writeElement('pageVerNum',cb.applicationVersion)},'JSON');" }, { "elementParent": "advancedPageDiv", "id": "newPageDiv" }, { "elementParent": "newPageDiv", "innerText": "Add Page:" }, { "elementParent": "newPageDiv", "elementType": "input", "id": "newPageName" }, { "elementParent": "newPageDiv", "innerText": "Add Page", "elementClass": "btn btn-primary", "elementType": "button", "onClick": "$page=(readElement('newPageName'));$pageVar.pages[$page]=$pageVar.pages.login;" }, { "elementParent": "advancedPageDiv", "innerText": "Delete Page", "id": "delPageDiv" }, { "elementParent": "delPageDiv", "elementType": "select", "id": "delPageSel" }, { "elementParent": "delPageDiv", "innerText": "Delete Page", "elementClass": "btn btn-danger", "elementType": "button", "attributeType": "disabled", "attributeValue": "true", "onClick": "if(confirm('Do you want to delete page '+readElement('delPageSel')+'?')){delete $pageVar.pages[(readElement('delPageSel'))]};", "id": "delBtn" }, { "elementParent": "advancedPageDiv", "innerText": "JSON", "elementClass": "$_.classes.Row $_.classes.ContentTitle" }, { "elementParent": "advancedPageDiv", "elementClass": "$_.classes.ImgRnd $_.classes.FullDesktopFullMobile", "id": "outputRow" }, { "elementParent": "advancedPageDiv", "elementClass": "$_.classes.ImgRnd $_.classes.FullDesktopFullMobile", "id": "outputRowJmlDiv" }, { "elementParent": "outputRowJmlDiv", "innerText": "JSON goes here", "elementClass": "$_.classes.ImgRnd $_.classes.FullDesktopFullMobile", "elementStyle": "$_.style.QuarterHeight $_.style.BlackText", "elementType": "textarea", "onChange": "prettyPrint('jmlTextArea');", "id": "jmlTextArea" }, { "elementParent": "advancedPageDiv", "elementClass": "$_.classes.ImgRnd $_.classes.FullDesktopFullMobile", "id": "outputRowHtmlDiv" }, { "elementParent": "outputRowHtmlDiv", "innerText": "HtmlTxtArea", "elementClass": "$_.classes.ImgRnd $_.classes.FullDesktopFullMobile", "elementStyle": "$_.style.QuarterHeight $_.style.BlackText", "elementType": "textarea", "id": "htmlTextArea" }, { "elementParent": "advancedPageDiv", "innerText": "Build Page from HTML", "elementClass": "btn btn-warning", "elementType": "button", "onClick": "document.getElementById('htmlDiv').innerHTML = document.getElementById('htmlTextArea').value;" }, { "elementParent": "advancedPageDiv", "innerText": "Convert HTML to JSON", "elementClass": "btn btn-warning", "elementType": "button", "onClick": "parseHtml('htmlTextArea','jmlTextArea');" }, { "elementParent": "currentPageDiv", "elementClass": "$_.classes.ImgRnd $_.classes.FullDesktopFullMobile", "elementStyle": "$_.style.BlackText;", "id": "treeDiv" }, { "elementParent": "currentPageDiv", "innerText": "Upload to S3", "elementClass": "btn btn-success", "elementType": "button", "onClick": "s3UrlUpload();" }, 

{ "elementParent": "parentElement", "elementType": "script", "innerText": "
function s3UrlUpload() {
xhrRequest('POST','/s3url?siteName='+readElement('currentSiteSel'),function(key){
$pageVar.applicationVersion++;
$pageVar.pages[$pageVar.currentPage] = JSON.parse(readElement('jmlTextArea'));
xhrRequest('PUT',JSON.parse(key),function(e){
writeElement('errDiv',e)
},'',JSON.stringify($pageVar))
})
};
function renameEItem($element,$current,$new){
$pageVar.pages[$pageVar.currentPage].elements[$element][$new]=$pageVar.pages[$pageVar.currentPage].elements[$element][$current];
$pageVar.pages[$pageVar.currentPage].elements[$element].splice($current,1) 
};
function updateEitem($page,$element,$eItem) {
$pageVar.pages[$page].elements[$element][$eItem]=readElement('ulPage'+$page+'Element'+$element+'eItem'+$eItem) 
};
var $pageItemList = ['pageTitle','pageDesc','elements'];
var $elementItemList = ['elementParent','elementType','elementClass','innerText','id','elementStyle','elementType','onClick','onChange','attributeType','attributeAction','href'];
var $elementTypeList = ['a','button','canvas','p','textarea','img','li','ul','hr','h1','h2','h3','h4','h5','h6','div','image','input','script','code','link','option','title','datalist','style','select','td','th','tr','abbr','acronym','address','applet','area','article','aside','audio','b','base','basefont','bdi','bdo','bgsound','big','blink','blockquote','body','br','caption','center','cite','col','colgroup','command','content','data','dd','del','details','dfn','dialog','dir','dl','dt','element','em','embed','fieldset','figcaption','figure','font','footer','form','frame','frameset','head','header','hgroup','html','i','iframe','ins','isindex','kbd','keygen','label','legend','listing','main','map','mark','marquee','menu','menuitem','meta','meter','multicol','nav','nextid','nobr','noembed','noframes','noscript','object','ol','optgroup','output','param','picture','plaintext','pre','progress','q','rp','rt','rtc','ruby','s','samp','section','shadow','slot','small','source','spacer','span','strike','strong','sub','summary','sup','table','tbody','template','tfoot','thead','time','track','tt','u','var','video','wbr','xmp'];
function addOption($inputItem,$elementParent) {
for ($option in $inputItem) {
cje($elementParent,{'elements':[ {'elementParent':$elementParent,'elementType':'option','innerText':$inputItem[$option]}]})
}
};
function buildHighlightedElement($element) {
removeElement('highlighterDiv');
removeElement('ulPageRow');
cje('headWrapper',{
'elements':[{
'elementParent':'headWrapper','id':'highlighterDiv','elementType':'style','innerText':'.Element' + $element + ' { background-color: lightblue;}'
},{
'elementParent':'ulPage'+$pageVar.currentPage+'Element'+$element,'id':'ulPageRow'
}]
});
buildElementRow('ulPageRow','',$element,$elementItemList,'add');
buildElementRow('ulPageRow',$pageVar.pages[$pageVar.currentPage].elements[$element],$element,$elementItemList,'delItem');
cje('ulPageRow',{
'elements':[ {
'elementParent':'ulPageRow','elementType':'button','elementClass':'btn btn-danger btn-xs','innerText':'X','onClick':'if (confirm(\"Do you want to delete element '+$element+'?\")) {$pageVar.pages[$pageVar.currentPage].elements.splice('+$element+',1)}' 
}]
});
};
function buildHighlightedPage($page) {
$pageVar.currentPage = $page;
writeElement('jmlTextArea',JSON.stringify($pageVar.pages[$page]));
removeElement('ulPage');
cje('li'+$page,{
'elements':[{
'elementParent':'li'+$page,'elementType':'ul','id':'ulPage'
}]
});
buildElementRow('ulPage','','',$pageItemList,'add');
buildElementRow('ulPage',$pageVar.pages[$page],'',$pageItemList,'delPage');
cje('ulPage',{
'elements':[ {'elementParent':'ulPage','elementType':'button','elementClass':'btn btn-primary btn-xs','innerText':'new','onClick':'$pageVar.pages[$pageVar.currentPage].elements[$pageVar.pages[$pageVar.currentPage].elements.length] = {\"elementParent\":\"parentElement\"}' 
}, {
'elementParent':'ulPage','elementType':'ul','id':'ulPage'+$page+'New'
}]
});
for ($element in $pageVar.pages[$page].elements) {
cje('ulPage',{'elements':[{ 'elementParent':'ulPage','elementType':'button','elementClass':'btn btn-primary btn-xs Element'+$element,'innerText':$element,'onClick':'buildHighlightedElement('+$element+');' }, { 'elementParent':'ulPage','elementType':'ul','id':'ulPage'+$page+'Element'+$element }]})};
writeElement('jmlTextArea',JSON.stringify($pageVar.pages[$page]));
prettyPrint('jmlTextArea');
rebuildElement('htmlDiv');
var $s = JSON.parse(readElement('jmlTextArea'));
for ($element in $s.elements){ $s.elements[$element].elementClass += ' highlightDiv Element' + $element; $s.elements[$element].onClick = 'buildHighlightedElement('+$element+');'};
cje('htmlDiv',$s)
};
function buildElementRow($parentElement,$itemArray,$element,$inputItem,$errLocype) {
var $itemType = 'input';
switch ($errLocype) {
case 'add': $parentWrapper = 'wrapper'+$parentElement;
cje($parentElement,{
'elements':[ {
'elementParent':$parentElement,'id':$parentWrapper
},{
'elementParent':$parentWrapper,'elementType':'select','id':'selectAdd'+ $parentWrapper
}, {
'elementParent':$parentWrapper,'elementType':'input','id':'inputAdd'+ $parentWrapper
}, {
'elementParent':$parentWrapper,'elementType':'button','elementClass':'btn btn-primary btn-xs','innerText':'add','onClick':'renameEItem('+$element+',\"\",readElement(\"selectAdd'+ $parentWrapper+'\"))'
}]
});
addOption($inputItem,'selectAdd'+ $parentWrapper);
break;
case 'delItem': var $styleHolder='$_.style.QuarterHeight';
var $classHolder='div_textarea $_.classes.ImgRnd $_.classes.FullDesktopFullMobile';
for ($item in $itemArray) {
var $itemClass = '';
var $itemStyle = '';
switch ($item) {
case 'elementParent': $itemType = 'select';
break;
case 'elementType': $itemType = 'select';
break;
case 'innerText': $itemType = 'textarea';
$itemClass=$classHolder;
$itemStyle=$styleHolder;
break;
case 'onClick': $itemType = 'textarea';
$itemClass=$classHolder;
$itemStyle=$styleHolder;
break;
case 'onChange': $itemType = 'textarea';
$itemClass=$classHolder;
$itemStyle=$styleHolder;
break;
default: $itemType = 'input';
break;

};
$currentParentElementName = 'ulPage'+$pageVar.currentPage+'Element'+$element+'item'+$item;
$selectItem = 'select'+$item;
$parentWrapper = 'wrapper'+$item;
cje($parentElement,{
'elements':[ {
'elementParent':$parentElement,'id':$parentWrapper
},{
'elementParent':$parentWrapper,'elementType':'select','innerText':$item,'id':$selectItem,'onChange':'renameEItem('+$element+',\"'+$item+'\",readElement(\"select'+$item+'\"))'
}, {
'elementParent':$parentWrapper,'elementType':$itemType,'innerText':$itemArray[$item],'elementClass':$itemClass,'elementStyle':$itemStyle,'id':$currentParentElementName,'onChange':'$pageVar.pages[\"'+$pageVar.currentPage+'\"].elements[\"'+$element+'\"][\"'+$item+'\"]=readElement(\"'+$currentParentElementName+'\")'
}, {
'elementParent':$parentWrapper,'elementType':'button','elementClass':'btn btn-danger btn-xs','innerText':'X','onClick':'if (confirm(\"Do you want to delete element item '+$item+'?\")) {
delete $pageVar.pages[$pageVar.currentPage].elements['+$element+'][\"'+$item+'\"]
}'
}]
});
addOption($inputItem,$selectItem);
writeElement($selectItem,$item);
switch ($item) {
case 'elementParent': var $elementIdList=['parent'+'Element','headWrapper','bodyWrapper','footWrapper','NavDDWrapper'];
var $eLen = $elementIdList.length;
for($e2=0;
$e2<$pageVar.pages[$pageVar.currentPage].elements.length;
$e2++){
try{
$pv = $pageVar.pages[$pageVar.currentPage].elements[$e2].id
}catch{

};
if($pv){
$elementIdList[$eLen]=$pv;
$eLen++
}
};
addOption($elementIdList,$currentParentElementName);
console.log($element+','+$item+','+$pageVar.currentPage);
writeElement($currentParentElementName,$pageVar.pages[$pageVar.currentPage].elements[$element].elementParent);
break;
case 'elementType': addOption($elementTypeList,$currentParentElementName);
console.log($element+','+$item+','+$pageVar.currentPage);
writeElement($currentParentElementName,$pageVar.pages[$pageVar.currentPage].elements[$element].elementType);
break;
default: break;

}
};
break;
case 'delPage': for ($item in $itemArray) {
$selectItem = 'select'+$item;
$parentWrapper = 'wrapper'+$item;
switch ($item) {
case 'pageDesc': $itemType = 'textarea';
break;
case 'elements': $itemType = 'select';
break;
default: $itemType = 'input';
break;

};
cje($parentElement,{
'elements':[ {
'elementParent':$parentElement,'id':$parentWrapper
},{
'elementParent':$parentWrapper,'elementType':'select','innerText':$item,'id':$selectItem,'onChange':'renameEItem('+$element+',\"'+$item+'\",readElement(\"'+$selectItem+'\"))'
}, {
'elementParent':$parentWrapper,'elementType':'input','innerText':$itemArray[$item],'id':$parentWrapper+$pageVar.currentPage+'item'+$item,'onChange':'$pageVar.pages[\"'+$pageVar.currentPage+'\"][\"'+$item+'\"]=readElement(\"'+$parentWrapper+$pageVar.currentPage+'item'+$item+'\")'
}, {
'elementParent':$parentWrapper,'elementType':'button','elementClass':'btn btn-danger btn-xs','innerText':'X','onClick':'if (confirm(\"Do you want to delete item '+$item+'?\")) {
delete $pageVar.pages[$pageVar.currentPage][\"'+$item+'\"]
}'
}]
});
addOption($inputItem,$selectItem);
writeElement($selectItem,$item)
};
break;
default: break;

}
};
xhrRequest('GET','https://s3.amazonaws.com/gilpublic/giltech/giltech.spa',function(cb){
$pageVar = JSON.parse(cb);
if ($settingsVar.userACLTable.length>25){
$settingsVar.userACLTable =$settingsVar.userACLTable.split(',')
};
addOption($settingsVar.userACLTable,'currentSiteSel');
$pageVar.currentPage = 's3';
writeElement('jmlTextArea',JSON.stringify($pageVar.pages[$pageVar.currentPage]));
for ($page in $pageVar.pages) {
cje('delPageSel',{
'elements':[ {
'elementParent':'delPageSel','elementType':'option','attributeType':'value','attributeValue':$page,'innerText':$page
},{
'elementParent':'treeDiv','id':'li'+$page
}, {
'elementParent':'li'+$page,'elementType':'button','elementClass':'btn btn-primary btn-xs','innerText':$page,'onClick':'buildHighlightedPage(\"'+$page+'\")'
}]
})
};
buildElementRow('advancedPageDiv',$spaRationalMain,'',getKeys($spaRationalMain),'delPage');
prettyPrint('jmlTextArea')
});"
}] 
}

*/
