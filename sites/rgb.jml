{
	"jmlVersion": "30OCT2023",
	"Author": "Stephen Gillie",
	"Created":" 8/14/2022",
	"Updated": "1/14/2024",
	"Notes": [
		"2.1 - Revert replacement variables.",
		"2.0 - rewrite as SPA format.",
		"v1.2.1 - Bugfix to updateRgbColor, replacing unused contentTitles ID with CalcLabel.",
		"v1.2 - Update elements to use randomized div names where possible, to reduce possible collisions."
	],
	"pages": {
		"main": {
			"elements": [
				{"elementClass":"container img-rounded","id": "Wrapper"},
				{"elementParent": "Wrapper","elementClass":"col-md-6 col-xs-12","id": "Calc"},
				{"elementParent": "Calc","innerText":"RGB Calculator","elementClass":"background-color:#eee; color:#000;","elementStyle":"font-size: 4vw; width: 90vw; text-align:center; border-radius: 15px;","id":"CalcLabel"},
				{"elementParent": "Calc","id": "HtmlRow"},
				{"elementParent": "HtmlRow","elementType":"input","elementClass":"col-md-12 col-xs-12 ","elementStyle":"color: #000; font-size: 4vw; width: 90vw; text-align:center; border-radius: 15px;","onChange":"updateRgbColor()","id": "CalcArea","attributeType": "maxlength","attributeAction": "7","id":"HtmlInput"},
				{"elementParent": "HtmlRow","elementType":"input","elementClass":"col-md-12 col-xs-12 ","elementStyle":"font-size: 4vw; width: 90vw; text-align:center; border-radius: 15px;","innerText":171,"onChange":"updateRgbDivColor('RedInput');","id": "RedInput","attributeType": "type","attributeAction": "number"},
				{"elementParent": "HtmlRow","elementType":"input","elementClass":"col-md-12 col-xs-12 ","elementStyle":"font-size: 4vw; width: 90vw; text-align:center; border-radius: 15px;","innerText":205,"onChange":"updateRgbDivColor('GreenInput');","id": "GreenInput","attributeType": "type","attributeAction": "number"},
				{"elementParent": "HtmlRow","elementType":"input","elementClass":"col-md-12 col-xs-12 ","elementStyle":"font-size: 4vw; width: 90vw; text-align:center; border-radius: 15px;","innerText":239,"onChange":"updateRgbDivColor('BlueInput');","id": "BlueInput","attributeType": "type","attributeAction": "number"},
				{"elementType":"script","innerText": "function componentToHex(c) {var hex = c.toString(16);return hex.length == 1 ? \"0\" + hex : hex};"},
				{"elementType":"script","innerText": "function rgbToHex(r, g, b) {return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b)};"},
				{"elementType":"script","innerText": "function hexToRgb(hex) { var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);return result ? {r: parseInt(result[1], 16),g: parseInt(result[2], 16),b: parseInt(result[3], 16) } : null};"},
				{"elementType":"script","innerText": "function updateRgbDivColor(divId) { var colorRatio = .25; var Color = getNumberFromDiv(divId); if (Color < 0) {writeElement(divId,0); Color = getNumberFromDiv(divId)}; if (Color > 255) {writeElement(divId,255); Color = getNumberFromDiv(divId)}; Color2 = Math.round((Color) * colorRatio); if (divId == 'RedInput') {getElement(divId).style.backgroundColor = rgbToHex(Color,Color2,Color2)} else if (divId == 'GreenInput') {getElement(divId).style.backgroundColor = rgbToHex(Color2,Color,Color2)} else if (divId == 'BlueInput') {getElement(divId).style.backgroundColor = rgbToHex(Color2,Color2,Color)}; writeElement('HtmlInput',rgbToHex(getNumberFromDiv('RedInput'),getNumberFromDiv('GreenInput'),getNumberFromDiv('BlueInput'))); getElement('CalcLabel').style.backgroundColor = readElement('HtmlInput'); getElement(divId).style.color ='#fff'};"},
				{"elementType":"script","innerText": "updateRgbDivColor('RedInput');updateRgbDivColor('GreenInput');updateRgbDivColor('BlueInput');"}
			]
		}
	}
}
